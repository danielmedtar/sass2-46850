@charset "UTF-8";
/*PALETA DE COLORES*/
/*CONDICIONALES*/
body {
  background-color: aquamarine;
}

/*BUCLES*/
/*VARIABLE i = iteracion
Se recomienda que la vuelta o iteracion se denomine i por buena pr√°ctica de programacion
*/
/*me lea que ese valor de la variable i, se convierta en algo legible para CSS*/
.col-1 {
  width: 10%;
}

/*me lea que ese valor de la variable i, se convierta en algo legible para CSS*/
.col-2 {
  width: 20%;
}

/*me lea que ese valor de la variable i, se convierta en algo legible para CSS*/
.col-3 {
  width: 30%;
}

/*me lea que ese valor de la variable i, se convierta en algo legible para CSS*/
.col-4 {
  width: 40%;
}

/*me lea que ese valor de la variable i, se convierta en algo legible para CSS*/
.col-5 {
  width: 50%;
}

/*me lea que ese valor de la variable i, se convierta en algo legible para CSS*/
.col-6 {
  width: 60%;
}

/*me lea que ese valor de la variable i, se convierta en algo legible para CSS*/
.col-7 {
  width: 70%;
}

/*me lea que ese valor de la variable i, se convierta en algo legible para CSS*/
.col-8 {
  width: 80%;
}

/*me lea que ese valor de la variable i, se convierta en algo legible para CSS*/
.col-9 {
  width: 90%;
}

/*me lea que ese valor de la variable i, se convierta en algo legible para CSS*/
.col-10 {
  width: 100%;
}

.bucles:nth-of-type(1) {
  font-size: 19px;
  background-color: #1a1a1a;
}

.bucles:nth-of-type(2) {
  font-size: 19px;
  background-color: #333333;
}

.bucles:nth-of-type(3) {
  font-size: 19px;
  background-color: #4d4d4d;
}

.bucles:nth-of-type(4) {
  font-size: 19px;
  background-color: #666666;
}

.bucles:nth-of-type(5) {
  font-size: 19px;
  background-color: gray;
}

.bucles:nth-of-type(6) {
  font-size: 19px;
  background-color: #999999;
}

.bucles:nth-of-type(7) {
  font-size: 19px;
  background-color: #b3b3b3;
}

.bucles:nth-of-type(8) {
  font-size: 19px;
  background-color: #cccccc;
}

.blue {
  color: blue;
}

.yellow {
  color: yellow;
}

.black {
  color: black;
}

/*uno*/ /*dos*/ /*tres*/
/*EL ORDEN DEL EACH IMPORTA. PORQUE USA ESE ORDEN PARA ORGANIZAR EL COMPORTAMIENTO DEL CODIGO*/
.texto-grande {
  font-size: 32px;
}

.texto-mediano {
  font-size: 24px;
}

.texto-chico {
  font-size: 18px;
}

/*Creamos el bucle para usar los valores del mapa*/
/*PARA ESTE CASO TAMBIEN IMPORTA EL ORDEN*/
.btn--twitter {
  background-color: #55acee;
}

.btn--facebook {
  background-color: #3a5795;
}

.btn--gmail {
  background-color: #C25E30;
}

section {
  text-align: center;
}

.boton, .boton--cancelar, .boton--aceptar {
  width: 200px;
  height: 50px;
  text-align: center;
  color: black;
  border-radius: 20px;
}

.boton--aceptar {
  background-color: green;
  color: yellow;
}

.boton--cancelar {
  background-color: red;
  color: yellow;
}

/*MIXINS*/
/*Sin argumentos*/
.box {
  display: flex;
  flex-direction: column;
  justify-content: center;
}

#box2 {
  display: flex;
  flex-direction: column;
  justify-content: center;
}

/*Con argumentos*/
.box {
  height: 50px;
  width: 500px;
}

/*USANDO MIXINS CON PARAMETROS*/
.imagen1 {
  height: 200px;
  width: 200px;
}

.imagen2 {
  height: 300px;
  width: 400px;
}

/*CON CSS PURO*/
.imagen3 {
  width: 350px;
  height: 150px;
}

.caja {
  width: 200px;
  height: 200px;
}

.gradiente-lineal {
  /*Los gradientes siempre se aplican con background-image*/
  /*sino se le pone direccion, por defecto es to bottom*/
  background-image: linear-gradient(black, rgba(239, 239, 177, 0));
  margin-bottom: 40px;
}

.gradiente-radial {
  /*gradiente mycolor space*/
  background-image: radial-gradient(circle, #051937, #004d7a, #008793, #00bf72, #a8eb12);
}

.transformaciones {
  display: flex;
  flex-wrap: wrap;
  gap: 140px;
}

.translate {
  background-color: red;
  transform: translate(10px, 30px);
}

/*deg = grados*/
.rotate {
  background-color: yellow;
  transform: rotate(45deg);
}

/*Es solo numero, va sin unidad*/
.scale {
  background-color: green;
  transition: all 0.8s;
}
.scale:hover {
  transform: scale(1.3);
}

/*deg = grados*/
.skew {
  background-color: black;
  transform: skew(20deg, 10deg);
}

/*TRANSICIONES*/
/*En principio se declara la transicion en el elemento. Y luego en el estado que quieran (hover) colocan el cambio que realiza*/
.transicion {
  background-color: #051937;
  transition: height 2s, width 5s;
}
.transicion:hover {
  height: 400px;
  width: 400px;
}

h2 {
  transition: all 0.4s;
}
h2:hover {
  background-color: #051937;
  color: #fff;
}
h2:active {
  background-color: #f68b1e;
}

input {
  margin-top: 30px;
  width: 100px;
  transition: width 1.5s;
}

input:focus {
  width: 300px;
}

/*Keyframes*/
#keyframe {
  width: 100px;
  height: 100px;
  background-color: green;
  animation-name: un_efecto;
  animation-iteration-count: infinite;
  animation-timing-function: ease-in;
  animation-duration: 2s;
  animation-delay: 2s;
}

@keyframes un_efecto {
  0% {
    width: 100px;
  }
  10% {
    width: 50px;
  }
  25% {
    width: 300px;
  }
  50% {
    width: 200px;
    background-color: red;
  }
  75% {
    width: 300px;
  }
  100% {
    width: 100px;
    background-color: green;
  }
}
/*barra progreso*/
.caja-barra {
  display: flex;
  justify-content: center;
  margin-top: 50px;
}

.barra-progreso {
  width: 60%;
  border: solid 1px black;
  height: 20px;
}

.barra-rellena {
  height: 20px;
  width: 80%;
  background-color: green;
  animation: rellenando 3s;
}

@keyframes rellenando {
  0% {
    width: 0;
  }
  100% {
    width: 80%;
  }
}
h1 {
  animation-duration: 2s;
  animation-name: aparecer;
  animation-iteration-count: infinite;
}

@keyframes aparecer {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

/*# sourceMappingURL=styles.css.map */
